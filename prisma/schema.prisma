// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  clerkUserId String?  @unique
  email       String   @unique
  name        String?
  imageUrl    String?
  createdAt   DateTime @default(now())
  videos      Video[]
  role        String   @default("student") // "student" or "teacher"
}

model Video {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  content     String   // The lesson content used to generate the video
  videoUrl    String?  // URL to the generated video
  language    String   @default("en")
  avatarId    String?  // The ID of the avatar used
  status      String   @default("pending") // "pending", "processing", "completed", "failed"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  author      User     @relation(fields: [authorId], references: [id])
  authorId    Int
}

model Avatar {
  id          Int     @id @default(autoincrement())
  name        String
  avatarId    String  @unique // D-ID avatar ID
  thumbnailUrl String?
  isCustom    Boolean @default(false)
}

// New model for contact form submissions
model Contact {
  id          Int       @id @default(autoincrement())
  name        String
  email       String
  subject     String
  message     String
  newsletter  Boolean   @default(false)
  createdAt   DateTime  @default(now())
  status      String    @default("unread") // unread, read, replied
}